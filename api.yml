openapi: 3.0.3
info:
  title: api
  description: api
  version: 0.0.1
servers:
  - url: http://0.0.0.0:3000
    description: api
tags:
  - name: api
    description: api
paths:
  /roles:
    get:
      tags:
        - api
      summary: Get roles
      description: Get roles
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Role'
    post:
      tags:
        - api
      summary: Add role
      description: Add role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Role'
  /role/{roleId}:
    get:
      tags:
        - api
      summary: Get role
      description: Get role
      parameters:
        - name: roleId
          in: path
          required: true
          description: role id
          schema:
            type: integer
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Role'
    put:
      tags:
        - api
      summary: Update role
      description: Update role
      parameters:
        - name: roleId
          description: role id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Role'
    delete:
      tags:
        - api
      summary: Remove role
      description: Remove role
      parameters:
        - name: roleId
          in: path
          required: true
          description: role id
          schema:
            type: integer
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Role'
  /users:
    get:
      tags:
        - api
      summary: Get users
      description: Get users
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
    post:
      tags:
        - api
      summary: Add user
      description: Add user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                firstname:
                  type: string
                middlename:
                  type: string
                lastname:
                  type: string
                gender:
                  type: string
                  enum: [male, female]
                age:
                  type: integer
                phone:
                  type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
  /user/{userId}:
    get:
      tags:
        - api
      summary: Get user
      description: Get user
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: integer
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
    put:
      tags:
        - api
      summary: Update user
      description: Update user
      parameters:
        - name: userId
          description: user id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                firstname:
                  type: string
                middlename:
                  type: string
                lastname:
                  type: string
                gender:
                  type: string
                  enum: [male, female]
                age:
                  type: integer
                phone:
                  type: string
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
    delete:
      tags:
        - api
      summary: Remove user
      description: Remove user
      parameters:
        - name: userId
          description: user id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
  /receptions:
    get:
      tags:
        - api
      summary: Get receptions
      description: Get receptions
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
    post:
      tags:
        - api
      summary: Add reception
      description: Add reception
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                doctorId:
                  type: integer
                patientId:
                  type: integer
                date:
                  type: date
                start_time:
                  type: date-time
                end_time:
                  type: date-time
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
  /reception/{receptionId}:
    get:
      tags:
        - api
      summary: Get reception
      description: Get reception
      parameters:
        - name: receptionId
          in: path
          required: true
          description: reception id
          schema:
            type: integer
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
    put:
      tags:
        - api
      summary: Update reception
      description: Update reception
      parameters:
        - name: receptionId
          description: reception id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                doctorId:
                  type: integer
                patientId:
                  type: integer
                date:
                  type: date
                start_time:
                  type: date-time
                end_time:
                  type: date-time
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
    delete:
      tags:
        - api
      summary: Remove reception
      description: Remove reception
      parameters:
        - name: receptionId
          description: reception id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
components:
  schemas:
    'response':
      type: object
      properties:
        status:
          type: integer
        success:
          type: boolean
        data:
          anyOf:
            - type: object
            - type: array
        message:
          type: string
        code:
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        role_id:
          type: integer
        firstname:
          type: string
        middlename:
          type: string
        lastname:
          type: string
        gender:
          type: string
          enum: [male, female]
        age:
          type: integer
        phone:
          type: string
    Reception:
      type: object
      properties:
        id:
          type: integer
        doctor_id:
          type: integer
        patient_id:
          type: integer
        date:
          type: date
        start_time:
          type: date-time
        end_time:
          type: date-time
